name: Build Docker image

on:
  pull_request:
  repository_dispatch:
    types:
      - build-image
  create:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ inputs.platforms }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🏗 Install Poetry
        uses: snok/install-poetry@v1
      - name: 🏗 Install ci dependencies
        run: poetry install --only=ci
      - name: Generate new version
        id: version
        run: echo version="$(poetry run python ci/bump_version.py)" >> $GITHUB_OUTPUT
      - name: Extract metadata (tags, labels) for ghcr
        id: meta-ghcr
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/whi-tw/arunapi/arunapi
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=raw,value=${{ fromJSON(steps.version.outputs.version).latest_tag }},enable=${{ github.event_name == "repository_dispatch" }}
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
          labels: |
            org.opencontainers.image.url=https://github.com/whi-tw/arunapi
            org.opencontainers.image.source=https://github.com/whi-tw/arunapi
            org.opencontainers.image.documentation=https://github.com/whi-tw/arunapi
            org.opencontainers.image.title=Arun API
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
